<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Seguimiento de Recomendaciones - FIAS</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.5/css/dataTables.bootstrap5.min.css">
    <style>
        :root {
            --fias-primary: #2c7d32;
            --fias-secondary: #8bc34a;
            --fias-accent: #ffc107;
        }
        
        body {
            background-color: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .navbar {
            background-color: var(--fias-primary);
        }
        
        .card-header {
            background-color: var(--fias-primary);
            color: white;
        }
        
        .status-badge {
            padding: 0.5em 1em;
            border-radius: 20px;
            font-weight: 600;
        }
        
        .status-en-proceso {
            background-color: #fff3cd;
            color: #856404;
        }
        
        .status-cumplido {
            background-color: #d4edda;
            color: #155724;
        }
        
        .status-no-cumplido {
            background-color: #f8d7da;
            color: #721c24;
        }
        
        .status-pendiente {
            background-color: #cce5ff;
            color: #004085;
        }
        
        .status-no-aplica {
            background-color: #e2e3e5;
            color: #383d41;
        }
        
        .risk-high {
            border-left: 5px solid #dc3545;
        }
        
        .risk-medium {
            border-left: 5px solid #ffc107;
        }
        
        .risk-low {
            border-left: 5px solid #28a745;
        }
        
        .dashboard-card {
            transition: transform 0.3s;
            border: none;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        
        .dashboard-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }
        
        .chart-container {
            position: relative;
            height: 250px;
        }
        
        .progress {
            height: 10px;
        }
        
        .filter-section {
            background-color: white;
            border-radius: 8px;
            padding: 15px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }
        
        .logo-container {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .logo-icon {
            font-size: 24px;
            color: white;
        }
        
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.8);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }
        
        .spinner-border {
            width: 3rem;
            height: 3rem;
        }
        
        .auth-container {
            max-width: 500px;
            margin: 50px auto;
            padding: 20px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        
        .config-help {
            background-color: #f8f9fa;
            border-left: 4px solid #0d6efd;
            padding: 15px;
            margin-top: 20px;
        }
        
        .no-data-message {
            text-align: center;
            padding: 40px;
            color: #6c757d;
        }
        
        .troubleshooting-steps {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 20px;
            margin-top: 20px;
        }
        
        .troubleshooting-steps ol {
            padding-left: 20px;
        }
        
        .troubleshooting-steps li {
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="text-center">
            <div class="spinner-border text-success" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
            <p class="mt-3" id="loadingText">Conectando con Excel Online...</p>
        </div>
    </div>

    <!-- Contenedor de solución de problemas -->
    <div id="troubleshootContainer" class="container mt-4" style="display: none;">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header bg-warning text-dark">
                        <h5 class="mb-0"><i class="fas fa-exclamation-triangle me-2"></i> Solución de Problemas</h5>
                    </div>
                    <div class="card-body">
                        <h5>Problema: No se puede conectar al archivo Excel</h5>
                        <p>Parece que hay un problema de permisos o configuración. Sigue estos pasos para resolverlo:</p>
                        
                        <div class="troubleshooting-steps">
                            <ol>
                                <li><strong>Verifica los permisos en Azure AD</strong>:
                                    <ul>
                                        <li>Asegúrate de que la aplicación tenga los permisos <code>Files.ReadWrite.All</code> en Microsoft Graph API</li>
                                        <li>Un administrador debe conceder consentimiento a estos permisos</li>
                                    </ul>
                                </li>
                                <li><strong>Verifica los permisos en SharePoint</strong>:
                                    <ul>
                                        <li>Asegúrate de que la cuenta de servicio tenga acceso al archivo Excel</li>
                                        <li>Comparte el archivo con la cuenta de servicio si es necesario</li>
                                    </ul>
                                </li>
                                <li><strong>Verifica el ID del archivo</strong>:
                                    <ul>
                                        <li>El ID del archivo debe ser: <code>EfVHs2JdDFFEn1rTdQSlg2MBicSrs01kGjrGKjnxbMhP4w</code></li>
                                        <li>Asegúrate de que el archivo todavía existe en la ubicación esperada</li>
                                    </ul>
                                </li>
                                <li><strong>Alternativa: Usar exportación manual</strong>:
                                    <ul>
                                        <li>Exporta el Excel a CSV manualmente</li>
                                        <li>Haz clic en el botón "Cargar CSV Manualmente" más abajo</li>
                                    </ul>
                                </li>
                            </ol>
                        </div>
                        
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-3">
                            <button class="btn btn-secondary me-md-2" onclick="document.getElementById('troubleshootContainer').style.display = 'none'">
                                <i class="fas fa-times me-1"></i> Cerrar
                            </button>
                            <button class="btn btn-primary" onclick="window.open('https://portal.azure.com/', '_blank')">
                                <i class="fas fa-external-link-alt me-1"></i> Abrir Azure Portal
                            </button>
                            <button class="btn btn-success" id="manualCsvBtn">
                                <i class="fas fa-upload me-1"></i> Cargar CSV Manualmente
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Contenedor de carga manual de CSV -->
    <div id="manualCsvContainer" class="auth-container" style="display: none;">
        <div class="text-center mb-4">
            <i class="fas fa-file-csv fa-3x text-primary"></i>
            <h3 class="mt-2">Carga Manual de Datos</h3>
            <p>Si no puedes conectarte automáticamente, exporta tu Excel a CSV y cárgalo manualmente.</p>
        </div>
        
        <div class="mb-3">
            <label for="csvFile" class="form-label">Seleccionar archivo CSV</label>
            <input class="form-control" type="file" id="csvFile" accept=".csv">
        </div>
        
        <div class="d-grid gap-2">
            <button class="btn btn-primary" id="processCsvBtn">
                <i class="fas fa-process me-1"></i> Procesar CSV
            </button>
            <button class="btn btn-secondary" onclick="document.getElementById('manualCsvContainer').style.display = 'none'">
                <i class="fas fa-times me-1"></i> Cancelar
            </button>
        </div>
        
        <div class="mt-3 config-help">
            <h5>Instrucciones para exportar a CSV:</h5>
            <ol>
                <li>Abre tu archivo Excel en OneDrive</li>
                <li>Haz clic en "Archivo" > "Descargar como"</li>
                <li>Selecciona "CSV (delimitado por comas)"</li>
                <li>Sube el archivo descargado usando el selector arriba</li>
            </ol>
        </div>
    </div>

    <!-- Contenido principal (inicialmente oculto) -->
    <div id="mainContent" style="display: none;">
        <!-- Navbar -->
        <nav class="navbar navbar-expand-lg navbar-dark">
            <div class="container">
                <div class="logo-container">
                    <i class="fas fa-leaf logo-icon"></i>
                    <a class="navbar-brand" href="#">FIAS - Seguimiento de Recomendaciones</a>
                </div>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ms-auto">
                        <li class="nav-item">
                            <a class="nav-link active" href="#"><i class="fas fa-home me-1"></i> Inicio</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#"><i class="fas fa-chart-bar me-1"></i> Dashboard</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#"><i class="fas fa-list me-1"></i> Recomendaciones</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#"><i class="fas fa-user me-1"></i> Auditoría Interna</a>
                        </li>
                        <li class="nav-item">
                            <button class="btn btn-outline-light btn-sm mt-1" id="refreshData">
                                <i class="fas fa-sync-alt me-1"></i> Actualizar
                            </button>
                        </li>
                        <li class="nav-item">
                            <button class="btn btn-outline-light btn-sm mt-1 ms-2" id="logoutBtn">
                                <i class="fas fa-sign-out-alt me-1"></i> Cerrar sesión
                            </button>
                        </li>
                        <li class="nav-item">
                            <button class="btn btn-outline-light btn-sm mt-1 ms-2" id="troubleshootBtn">
                                <i class="fas fa-wrench me-1"></i> Solucionar
                            </button>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>

        <div class="container mt-4">
            <!-- Filtros -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="filter-section">
                        <div class="row">
                            <div class="col-md-3 mb-2">
                                <label for="projectFilter" class="form-label">Proyecto</label>
                                <select class="form-select" id="projectFilter">
                                    <option value="">Todos los proyectos</option>
                                    <!-- Se llenará dinámicamente -->
                                </select>
                            </div>
                            <div class="col-md-3 mb-2">
                                <label for="yearFilter" class="form-label">Año</label>
                                <select class="form-select" id="yearFilter">
                                    <option value="">Todos los años</option>
                                    <!-- Se llenará dinámicamente -->
                                </select>
                            </div>
                            <div class="col-md-3 mb-2">
                                <label for="statusFilter" class="form-label">Estado</label>
                                <select class="form-select" id="statusFilter">
                                    <option value="">Todos los estados</option>
                                    <!-- Se llenará dinámicamente -->
                                </select>
                            </div>
                            <div class="col-md-3 mb-2">
                                <label for="riskFilter" class="form-label">Nivel de Riesgo</label>
                                <select class="form-select" id="riskFilter">
                                    <option value="">Todos los niveles</option>
                                    <option value="ALTO">ALTO</option>
                                    <option value="MEDIO">MEDIO</option>
                                    <option value="BAJO">BAJO</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Dashboard Cards -->
            <div class="row mb-4" id="dashboardCards">
                <div class="col-12">
                    <div class="no-data-message">
                        <i class="fas fa-database fa-3x mb-3"></i>
                        <h4>Esperando datos de Excel</h4>
                        <p>Los datos se cargarán automáticamente después de la autenticación.</p>
                    </div>
                </div>
            </div>

            <!-- Charts -->
            <div class="row mb-4">
                <div class="col-md-6 mb-3">
                    <div class="card dashboard-card">
                        <div class="card-header">
                            <h5 class="mb-0">Recomendaciones por Estado</h5>
                        </div>
                        <div class="card-body">
                            <div class="chart-container">
                                <canvas id="statusChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="card dashboard-card">
                        <div class="card-header">
                            <h5 class="mb-0">Recomendaciones por Nivel de Riesgo</h5>
                        </div>
                        <div class="card-body">
                            <div class="chart-container">
                                <canvas id="riskChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Tabla de Recomendaciones -->
            <div class="row">
                <div class="col-12">
                    <div class="card dashboard-card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">Lista de Recomendaciones</h5>
                            <div>
                                <button class="btn btn-sm btn-outline-light" id="exportBtn">
                                    <i class="fas fa-download me-1"></i> Exportar
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="no-data-message">
                                <i class="fas fa-table fa-3x mb-3"></i>
                                <h4>Tabla de recomendaciones</h4>
                                <p>Los datos se mostrarán aquí después de cargarse desde Excel.</p>
                            </div>
                            <div class="table-responsive" id="tableContainer" style="display: none;">
                                <table id="recommendationsTable" class="table table-hover table-striped">
                                    <thead>
                                        <tr>
                                            <th>Proyecto</th>
                                            <th>Año</th>
                                            <th>Riesgo</th>
                                            <th>Deficiencia</th>
                                            <th>Recomendación</th>
                                            <th>Estado</th>
                                            <th>Responsable</th>
                                            <th>Fecha Seguimiento</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <!-- Los datos se cargarán mediante JavaScript -->
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal para ver detalles -->
        <div class="modal fade" id="detailModal" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Detalle de Recomendación</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-6">
                                <p><strong>Proyecto:</strong> <span id="modal-project"></span></p>
                                <p><strong>Año:</strong> <span id="modal-year"></span></p>
                                <p><strong>Nivel de Riesgo:</strong> <span id="modal-risk"></span></p>
                            </div>
                            <div class="col-md-6">
                                <p><strong>Estado:</strong> <span id="modal-status"></span></p>
                                <p><strong>Responsable:</strong> <span id="modal-responsible"></span></p>
                                <p><strong>Fecha Seguimiento:</strong> <span id="modal-date"></span></p>
                            </div>
                        </div>
                        <hr>
                        <p><strong>Deficiencia:</strong></p>
                        <p id="modal-deficiency" class="bg-light p-3 rounded"></p>
                        <p><strong>Recomendación:</strong></p>
                        <p id="modal-recommendation" class="bg-light p-3 rounded"></p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Footer -->
        <footer class="bg-dark text-white mt-5 py-4">
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <h5>FIAS - Fondo de Inversión Ambiental Sostenible</h5>
                        <p>Auditoría Interna - Desarrollado por Jair Cruz</p>
                        <p class="small">Última actualización: <span id="lastUpdate"></span></p>
                    </div>
                    <div class="col-md-6 text-md-end">
                        <p>&copy; 2023 FIAS. Todos los derechos reservados.</p>
                    </div>
                </div>
            </div>
        </footer>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.5/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://alcdn.msauth.net/browser/2.24.0/js/msal-browser.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.3.0/papaparse.min.js"></script>
    
    <script>
        // Configuración de MSAL con los datos proporcionados
        const msalConfig = {
            auth: {
                clientId: "deff0a8a-9d8b-4463-8d8f-382b82476757",
                authority: "https://login.microsoftonline.com/5e23e4af-237d-4d97-bf6e-dca808015787",
                redirectUri: window.location.origin
            },
            cache: {
                cacheLocation: "sessionStorage",
                storeAuthStateInCookie: false
            }
        };

        const msalInstance = new msal.PublicClientApplication(msalConfig);
        let accessToken = null;

        // Configuración del archivo Excel
        const EXCEL_FILE_ID = "EfVHs2JdDFFEn1rTdQSlg2MBicSrs01kGjrGKjnxbMhP4w";
        const EXCEL_SHEET_NAME = "RECOMENDACIONES AUD EXTERNA";
        
        // Variables globales
        let recommendationsData = [];
        let table;
        let statusChart, riskChart;
        
        // Inicializar la aplicación
        async function initializeApp() {
            showLoading(true);
            
            try {
                // Verificar si hay una sesión activa
                const accounts = msalInstance.getAllAccounts();
                if (accounts.length > 0) {
                    // Usuario ya autenticado
                    await acquireToken();
                    document.getElementById('mainContent').style.display = 'block';
                    await loadDataFromExcel();
                } else {
                    // Mostrar interfaz de autenticación
                    document.getElementById('mainContent').style.display = 'block';
                    showError('Por favor, inicia sesión para acceder a los datos');
                }
            } catch (error) {
                console.error('Error inicializando la aplicación:', error);
                showError('Error al inicializar la aplicación: ' + error.message);
                document.getElementById('troubleshootContainer').style.display = 'block';
            } finally {
                showLoading(false);
            }
        }

        // Adquirir token de acceso
        async function acquireToken() {
            try {
                const accounts = msalInstance.getAllAccounts();
                if (accounts.length === 0) throw new Error("No hay cuentas activas");
                
                const silentRequest = {
                    scopes: ["Files.ReadWrite.All", "https://graph.microsoft.com/.default"],
                    account: accounts[0]
                };
                
                const response = await msalInstance.acquireTokenSilent(silentRequest);
                accessToken = response.accessToken;
                return accessToken;
            } catch (error) {
                console.error('Error adquiriendo token:', error);
                throw error;
            }
        }

        // Función para cargar datos desde Excel Online
        async function loadDataFromExcel() {
            showLoading(true);
            document.getElementById('loadingText').textContent = "Conectando con Excel Online...";
            
            try {
                if (!accessToken) {
                    await acquireToken();
                }
                
                // Primero verificar que tenemos acceso al archivo
                const fileResponse = await fetch(
                    `https://graph.microsoft.com/v1.0/drives/root/items/${EXCEL_FILE_ID}`,
                    {
                        headers: {
                            'Authorization': `Bearer ${accessToken}`
                        }
                    }
                );
                
                if (!fileResponse.ok) {
                    throw new Error(`No se puede acceder al archivo: ${fileResponse.status} ${fileResponse.statusText}`);
                }
                
                // Obtener datos del Excel
                const response = await fetch(
                    `https://graph.microsoft.com/v1.0/drives/root/items/${EXCEL_FILE_ID}/workbook/worksheets('${EXCEL_SHEET_NAME}')/usedRange`,
                    {
                        headers: {
                            'Authorization': `Bearer ${accessToken}`
                        }
                    }
                );
                
                if (!response.ok) {
                    throw new Error(`Error ${response.status}: ${response.statusText}`);
                }
                
                const data = await response.json();
                recommendationsData = processExcelData(data.values);
                
                if (recommendationsData.length === 0) {
                    throw new Error("No se encontraron datos en el archivo Excel");
                }
                
                updateDashboard();
                updateLastUpdateTime();
                
            } catch (error) {
                console.error('Error cargando datos:', error);
                showError('Error al cargar datos: ' + error.message);
                document.getElementById('troubleshootContainer').style.display = 'block';
            } finally {
                showLoading(false);
            }
        }

        // Procesar datos de Excel
        function processExcelData(excelData) {
            const processedData = [];
            
            if (!excelData || excelData.length === 0) {
                return processedData;
            }
            
            // Buscar la fila que contiene los encabezados
            let headerRowIndex = -1;
            for (let i = 0; i < excelData.length; i++) {
                if (excelData[i] && excelData[i].some(cell => cell && cell.toString().toLowerCase().includes("proyecto"))) {
                    headerRowIndex = i;
                    break;
                }
            }
            
            if (headerRowIndex === -1) {
                return processedData;
            }
            
            // Obtener encabezados
            const headers = excelData[headerRowIndex];
            
            // Encontrar índices de columnas
            const projectIndex = headers.findIndex(h => h && h.toString().toLowerCase().includes("proyecto"));
            const yearIndex = headers.findIndex(h => h && h.toString().toLowerCase().includes("año"));
            const riskIndex = headers.findIndex(h => h && h.toString().toLowerCase().includes("riesgo"));
            const deficiencyIndex = headers.findIndex(h => h && h.toString().toLowerCase().includes("deficiencia"));
            const recommendationIndex = headers.findIndex(h => h && h.toString().toLowerCase().includes("recomendación"));
            const statusIndex = headers.findIndex(h => h && h.toString().toLowerCase().includes("status"));
            const responsibleIndex = headers.findIndex(h => h && h.toString().toLowerCase().includes("responsable"));
            const dateIndex = headers.findIndex(h => h && h.toString().toLowerCase().includes("fecha"));
            
            // Procesar filas de datos (empezando desde la fila después de los encabezados)
            for (let i = headerRowIndex + 1; i < excelData.length; i++) {
                const row = excelData[i];
                
                // Solo procesar filas con datos en la columna de proyecto
                if (row && row[projectIndex]) {
                    processedData.push({
                        proyecto: row[projectIndex] || '',
                        año: row[yearIndex] ? row[yearIndex].toString() : '',
                        riesgo: row[riskIndex] || '',
                        deficiencia: row[deficiencyIndex] || '',
                        recomendacion: row[recommendationIndex] || '',
                        estado: row[statusIndex] || '',
                        responsable: row[responsibleIndex] || '',
                        fechaSeguimiento: row[dateIndex] || ''
                    });
                }
            }
            
            return processedData;
        }

        // Función para procesar CSV manualmente
        function processManualCSV(csvText) {
            showLoading(true);
            
            try {
                // Parsear CSV
                const results = Papa.parse(csvText, {
                    header: true,
                    skipEmptyLines: true,
                    encoding: 'UTF-8'
                });
                
                if (results.errors && results.errors.length > 0) {
                    throw new Error('Error parsing CSV: ' + results.errors[0].message);
                }
                
                recommendationsData = results.data.map(row => ({
                    proyecto: row.Proyecto || row.PROYECTO || '',
                    año: row.Año || row.AÑO || row.Year || '',
                    riesgo: row.Riesgo || row.RIESGO || row.Risk || '',
                    deficiencia: row.Deficiencia || row.DEFICIENCIA || '',
                    recomendacion: row.Recomendación || row.RECOMENDACIÓN || row.Recomendacion || '',
                    estado: row.Estado || row.ESTADO || row.Status || '',
                    responsable: row.Responsable || row.RESPONSABLE || '',
                    fechaSeguimiento: row['Fecha Seguimiento'] || row['FECHA SEGUIMIENTO'] || ''
                }));
                
                if (recommendationsData.length === 0) {
                    throw new Error("No se encontraron datos en el archivo CSV");
                }
                
                updateDashboard();
                updateLastUpdateTime();
                document.getElementById('manualCsvContainer').style.display = 'none';
                showError('Datos cargados manualmente desde CSV');
                
            } catch (error) {
                console.error('Error procesando CSV:', error);
                showError('Error al procesar CSV: ' + error.message);
            } finally {
                showLoading(false);
            }
        }

        // Función para actualizar el dashboard completo
        function updateDashboard() {
            updateDashboardCards();
            updateFilters();
            initDataTable();
            updateCharts();
            
            // Ocultar mensaje de no datos y mostrar tabla
            document.getElementById('tableContainer').style.display = 'block';
            document.querySelectorAll('.no-data-message').forEach(el => el.style.display = 'none');
        }

        // Resto del código (updateDashboardCards, updateFilters, initDataTable, updateCharts, showLoading, showError, updateLastUpdateTime)...
        // [Estas funciones permanecen igual que en la versión anterior]

        // Inicializar cuando el documento esté listo
        $(document).ready(function() {
            // Configurar evento para el botón de solución de problemas
            $('#troubleshootBtn').click(function() {
                document.getElementById('troubleshootContainer').style.display = 'block';
            });
            
            // Configurar evento para el botón de carga manual de CSV
            $('#manualCsvBtn').click(function() {
                document.getElementById('manualCsvContainer').style.display = 'block';
                document.getElementById('troubleshootContainer').style.display = 'none';
            });
            
            // Configurar evento para procesar CSV
            $('#processCsvBtn').click(function() {
                const fileInput = document.getElementById('csvFile');
                if (fileInput.files.length === 0) {
                    showError('Por favor, selecciona un archivo CSV');
                    return;
                }
                
                const file = fileInput.files[0];
                const reader = new FileReader();
                
                reader.onload = function(e) {
                    processManualCSV(e.target.result);
                };
                
                reader.onerror = function() {
                    showError('Error al leer el archivo');
                };
                
                reader.readAsText(file);
            });
            
            // Configurar evento para el botón de actualizar
            $('#refreshData').click(function() {
                loadDataFromExcel();
            });
            
            // Configurar evento para el botón de exportar
            $('#exportBtn').click(function() {
                window.open(`https://fiasec-my.sharepoint.com/:x:/g/personal/paraujo_fias_org_ec/${EXCEL_FILE_ID}?e=lTYAYd&download=1`, '_blank');
            });
            
            // Inicializar la aplicación
            initializeApp();
        });

        // [Aquí irían el resto de las funciones (updateDashboardCards, updateFilters, initDataTable, etc.)]
        // Para ahorrar espacio, no las he repetido pero son las mismas de la versión anterior

    </script>
</body>
</html>
